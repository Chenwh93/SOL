{
    "swagger": "2.0",
    "info": {
        "title": "SOL server API",
        "version": "1.1",
        "description": "Server that uses SOL to compute solutions to network optimization problems"
    },
    "basePath": "/api/v1/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json",
        "text/plain; charset=utf-8"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/topology": {
            "get": {
                "summary": "Get the topology currently stored in on the server",
                "responses": {
                    "200": {
                        "description": "The currently stored topology is returned",
                        "schema": {
                            "$ref": "#/definitions/Topology"
                        }
                    },
                    "400": {
                        "description": "The topology is not available because it was not set"
                    }
                },
                "tags": [
                    "Topology"
                ]
            },
            "post": {
                "summary": "Set the topology on which SOL should operate. This is a required step before composition.",
                "responses": {
                    "201": {
                        "description": "The topology was successfully set"
                    }
                },
                "tags": [
                    "Topology"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "topology",
                        "schema": {
                            "$ref": "#/definitions/Topology"
                        }
                    }
                ]
            }
        },
        "/compose": {
            "post": {
                "summary": "Submit a series of paths for composition",
                "responses": {
                    "200": {
                        "description": "Returns forwarding paths for each application",
                        "schema": {
                            "$ref": "#/definitions/ComposeResponse"
                        }
                    }
                },
                "tags": [
                    "Composition"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "composeobj",
                        "schema": {
                            "$ref": "#/definitions/ComposeObject"
                        }
                    }
                ]
            }
        },
        "/hi": {
            "get": {
                "summary": "Return a hello world response to ensure the service is alive",
                "responses": {
                    "200": {
                        "description": "Everything is fine, we are live!"
                    }
                },
                "tags": [
                    "Test"
                ]
            }
        }
    },
    "definitions": {
        "TrafficClass": {
            "properties": {
                "tcid": {
                    "type": "integer",
                    "description": "Unique ID number of this traffic class"
                },
                "src": {
                    "type": "integer",
                    "description": "Source (ingress) node for the traffic class"
                },
                "dst": {
                    "type": "integer",
                    "description": "Destination (egress) node for the traffic class"
                },
                "vol_flows": {
                    "type": "integer",
                    "description": "Volume of this traffic class in flows"
                },
                "src_ip_prefix": {
                    "type": "string",
                    "description": "Source IP prefix that matches traffic in this class (CIDR notation)"
                },
                "dst_ip_prefix": {
                    "type": "string",
                    "description": "Destination IP prefix that matches traffic in this class (CIDR notation)"
                }
            }
        },
        "Topology": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the topology"
                },
                "directed": {
                    "type": "boolean",
                    "description": "Whether the graph is directed"
                },
                "graph": {
                    "type": "object"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/node"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/link"
                    }
                }
            }
        },
        "node": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Node identifier"
                },
                "services": {
                    "type": "array",
                    "description": "List of services available at this node.",
                    "items": {
                        "type": "string"
                    }
                },
                "resources": {
                    "type": "object"
                }
            }
        },
        "link": {
            "properties": {
                "source": {
                    "type": "integer",
                    "description": "The source node of this edge"
                },
                "target": {
                    "type": "integer",
                    "description": "The destination (target) node of this edge"
                },
                "resources": {
                    "type": "object"
                }
            }
        },
        "App": {
            "properties": {
                "traffic_classes": {
                    "type": "array",
                    "description": "List of traffic classes this application is responsible for (claims ownership of)",
                    "items": {
                        "$ref": "#/definitions/TrafficClass"
                    }
                },
                "predicate": {
                    "type": "string",
                    "description": "Path predicate for this application"
                },
                "constraints": {
                    "type": "array",
                    "description": "List of optimization constraints",
                    "items": {
                        "type": "string"
                    }
                },
                "objective": {
                    "type": "string",
                    "description": "The app's objective function"
                },
                "id": {
                    "type": "string",
                    "description": "Identification string for this application"
                },
                "resource_cost": {
                    "$ref": "#/definitions/ResourceCost"
                }
            }
        },
        "ResourceCost": {
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "Name of the resource"
                },
                "cost": {
                    "type": "number",
                    "description": "Resource consumption cost"
                }
            }
        },
        "ComposeObject": {
            "properties": {
                "fairness": {
                    "type": "string",
                    "default": "weighted",
                    "description": "The fairness mode for composition. A weighted sum is the default. Other options include 'maxmin' and max-min and 'propfair' for proportional fairness."
                },
                "apps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/App"
                    },
                    "description": "List of applications to compose"
                }
            }
        },
        "ComposeResponse": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ResultPaths"
            }
        },
        "Path": {
            "properties": {
                "tcid": {
                    "type": "integer",
                    "description": "The traffic class this path belongs to"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of nodes in this path"
                },
                "fraction": {
                    "description": "The fraction of traffic (of an associated traffic class) that should be flowing on this path. Between 0 and 1.",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "ResultPaths": {
            "properties": {
                "app": {
                    "type": "string",
                    "description": "The ID of the application for which this path is destined"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Path"
                    }
                }
            }
        }
    }
}